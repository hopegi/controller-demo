package cloudesl

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// ComposePlanogramPositions invokes the cloudesl.ComposePlanogramPositions API synchronously
// api document: https://help.aliyun.com/api/cloudesl/composeplanogrampositions.html
func (client *Client) ComposePlanogramPositions(request *ComposePlanogramPositionsRequest) (response *ComposePlanogramPositionsResponse, err error) {
	response = CreateComposePlanogramPositionsResponse()
	err = client.DoAction(request, response)
	return
}

// ComposePlanogramPositionsWithChan invokes the cloudesl.ComposePlanogramPositions API asynchronously
// api document: https://help.aliyun.com/api/cloudesl/composeplanogrampositions.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) ComposePlanogramPositionsWithChan(request *ComposePlanogramPositionsRequest) (<-chan *ComposePlanogramPositionsResponse, <-chan error) {
	responseChan := make(chan *ComposePlanogramPositionsResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.ComposePlanogramPositions(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// ComposePlanogramPositionsWithCallback invokes the cloudesl.ComposePlanogramPositions API asynchronously
// api document: https://help.aliyun.com/api/cloudesl/composeplanogrampositions.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) ComposePlanogramPositionsWithCallback(request *ComposePlanogramPositionsRequest, callback func(response *ComposePlanogramPositionsResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *ComposePlanogramPositionsResponse
		var err error
		defer close(result)
		response, err = client.ComposePlanogramPositions(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// ComposePlanogramPositionsRequest is the request struct for api ComposePlanogramPositions
type ComposePlanogramPositionsRequest struct {
	*requests.RpcRequest
	ActionType        string                                        `position:"Body" name:"ActionType"`
	BeAutoRefresh     requests.Boolean                              `position:"Body" name:"BeAutoRefresh"`
	StoreId           string                                        `position:"Body" name:"StoreId"`
	Layer             requests.Integer                              `position:"Body" name:"Layer"`
	Shelf             string                                        `position:"Body" name:"Shelf"`
	LayerOrigin       string                                        `position:"Body" name:"LayerOrigin"`
	ShelfPositionInfo *[]ComposePlanogramPositionsShelfPositionInfo `position:"Body" name:"ShelfPositionInfo"  type:"Repeated"`
}

// ComposePlanogramPositionsShelfPositionInfo is a repeated param struct in ComposePlanogramPositionsRequest
type ComposePlanogramPositionsShelfPositionInfo struct {
	OffsetFrom  string `name:"OffsetFrom"`
	Depth       string `name:"Depth"`
	Column      string `name:"Column"`
	Facing      string `name:"Facing"`
	OffsetTo    string `name:"OffsetTo"`
	ItemBarCode string `name:"ItemBarCode"`
}

// ComposePlanogramPositionsResponse is the response struct for api ComposePlanogramPositions
type ComposePlanogramPositionsResponse struct {
	*responses.BaseResponse
	ErrorMessage   string `json:"ErrorMessage" xml:"ErrorMessage"`
	ErrorCode      string `json:"ErrorCode" xml:"ErrorCode"`
	Message        string `json:"Message" xml:"Message"`
	DynamicCode    string `json:"DynamicCode" xml:"DynamicCode"`
	Code           string `json:"Code" xml:"Code"`
	DynamicMessage string `json:"DynamicMessage" xml:"DynamicMessage"`
	RequestId      string `json:"RequestId" xml:"RequestId"`
	Success        bool   `json:"Success" xml:"Success"`
}

// CreateComposePlanogramPositionsRequest creates a request to invoke ComposePlanogramPositions API
func CreateComposePlanogramPositionsRequest() (request *ComposePlanogramPositionsRequest) {
	request = &ComposePlanogramPositionsRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("cloudesl", "2020-02-01", "ComposePlanogramPositions", "cloudesl", "openAPI")
	return
}

// CreateComposePlanogramPositionsResponse creates a response to parse from ComposePlanogramPositions response
func CreateComposePlanogramPositionsResponse() (response *ComposePlanogramPositionsResponse) {
	response = &ComposePlanogramPositionsResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
